[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-investment-advisor"
version = "1.0.0"
description = "Multi-Agent AI Investment Advisor System with Real Financial Data Integration"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "AI Investment Advisor Team"},
]
keywords = [
    "ai",
    "investment",
    "portfolio-management",
    "fintech",
    "langchain",
    "langgraph",
    "multi-agent",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9"
dependencies = [
    # Core AI and LangChain
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "langchain-community>=0.0.20",
    "langgraph>=0.0.40",
    "openai>=1.12.0",
    
    # Financial Data APIs
    "yfinance>=0.2.18",
    "alpha-vantage>=2.3.1", 
    "fredapi>=0.5.0",
    "pandas-datareader>=0.10.0",
    
    # Data Science and Analysis
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    
    # Financial Analysis Libraries
    "pyfolio>=0.9.2",
    "empyrical>=0.5.5", 
    "arch>=6.2.0",
    
    # Portfolio Optimization
    "cvxpy>=1.4.0",
    "PyPortfolioOpt>=1.5.5",
    
    # Visualization
    "matplotlib>=3.7.0",
    "plotly>=5.15.0",
    "seaborn>=0.12.0",
    
    # Data Validation and Models
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    
    # Async and HTTP
    "aiohttp>=3.8.0",
    "httpx>=0.24.0",
    
    # Configuration and Environment
    "python-dotenv>=1.0.0",
    
    # CLI Tools
    "click>=8.1.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0", 
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "jupyter-lab>=4.0.0",
]
advanced-finance = [
    # Advanced libraries that may require compilation
    "quantlib>=1.31",
    "zipline-reloaded>=3.0.0",
    "ta-lib>=0.4.28",
]

[project.scripts]
ai-advisor = "ai_investment_advisor.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/ai-investment-advisor"
Repository = "https://github.com/yourusername/ai-investment-advisor.git"
Documentation = "https://github.com/yourusername/ai-investment-advisor/docs"

[tool.hatch.build.targets.wheel]
packages = ["ai_investment_advisor"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'

# isort configuration  
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ai_investment_advisor"]

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ai_investment_advisor",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow tests requiring external APIs",
]

# Coverage configuration
[tool.coverage.run]
source = ["ai_investment_advisor"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
